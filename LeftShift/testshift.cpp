#include <stdlib.h>
#include <iostream>
#include <time.h>
#include <chrono>
#include "verilated.h"
#include "./obj_dir/Vshiftl.h"
#include "shiftl.c"

typedef unsigned int word;
word shiftl_c(word alu_a_i, word alu_b_i);
void test(word alu_a_i, word alu_b_i);

double verilatorTime;
double cTime;
double verilatorTime2;
double cTime2;

int main(int argc, char **argv) {
    //Initialize Verilators variables
	Verilated::commandArgs(argc, argv);
    verilatorTime = 0;
    cTime = 0;
    verilatorTime2 = 0;
    cTime2 = 0;
    //std::cout << "Stress Testing:\n";
    for(int i = 0; i < atoi(argv[1]); i++){
        test(rand(), rand());
    }

    // std::cout << "Time taken by C Implementation: "
    //       << cTime << " seconds" << std::endl;
    
	// std::cout << "Time taken by Verilator Simulation: "
    //      << verilatorTime << " seconds" << std::endl;

    // std::cout << verilatorTime / cTime << " times faster\n";
    std::cout << cTime << " " << cTime2 << " " << verilatorTime << " " << verilatorTime2;
	exit(EXIT_SUCCESS);
}
void test(word alu_a_i, word alu_b_i){
    using namespace std::chrono;
	volatile word out;
	//C Implementation 
    
    //start = clock();
    high_resolution_clock::time_point t1 = high_resolution_clock::now();
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    high_resolution_clock::time_point t2 = high_resolution_clock::now();
    cTime += duration_cast<duration<double>>(t2-t1).count();

    t1 = high_resolution_clock::now();

    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);
    out = shiftl_c(alu_a_i, alu_b_i);

	t2 = high_resolution_clock::now();
    cTime2 += duration_cast<duration<double>>(t2-t1).count();

	//Verilator simulation

	//Create an instance of our module under test
	Vshiftl *shiftl = new Vshiftl;
    shiftl->alu_a_i = alu_a_i;
    shiftl->alu_b_i = alu_b_i;

	t1 = high_resolution_clock::now();

    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();

	t2 = high_resolution_clock::now();
    verilatorTime += duration_cast<duration<double>>(t2-t1).count();
    
    t1 = high_resolution_clock::now();

    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();
    shiftl->eval();

	t2 = high_resolution_clock::now();
    verilatorTime2 += duration_cast<duration<double>>(t2-t1).count();

    // if(shiftl->alu_p_o != out){
    //     std::cout << "Error\n";
    //     std::cout << alu_a_i << " ";
    //     std::cout << alu_b_i << " ";
    //     std::cout << shiftl->alu_p_o << " ";
    //     std::cout << out << " ";
    // }
        // std:: cout << "Verilog Output:" << shiftl->alu_p_o << "\n";
        // std:: cout << "C Output:" << out << "\n\n";
}
